<?php 

//TODO: Antes de poner en producción se debe eliminar logs, banderas de sandbox, inits, y currency
//TODO: Hay que implementar los backpaths en el menu para el servidor IPN

//Cargamos el sdk de mercadopago

$path = libraries_get_path('mercadopago');
if ($path == libraries_get_path('mercadopago')) {
  include_once($path.'/mercadopago.php');

}


function uc_mercadopago_menu() {
  $items['uc_mercadopago/%'] = array(
      'title' => 'Payment Complete',
      'page callback' => 'uc_mercadopago_complete',
      'page arguments' => array(1),
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
  );
  return $items;
}


function uc_mercadopago_complete($result) {

  if (empty($_GET)) {
    watchdog('MercadoPago Gateway',
        'Received an empty or incomplete response.  Response details: @request_details',
        array('@request_details' =>  print_r($_POST,true)), WATCHDOG_ERROR);

    return 'There was a problem with your payment';
  }
  
  if ($result == 'success') {

    
    
    // Insert logic here to make sure payment info can be matched to valid order
    //TODO: sanitizar order_id
    $order_id = intval($_GET['external_reference']);
    
    $order = uc_order_load($order_id);
    
    //print_r($order);
    
    // Assuming all tests passed and payment was successful
    // Complete the order
    $collection_id = $_GET['collection_id'];
    $collection_status = $_GET['collection_status'];
    $preference_id = $_GET['preference_id'];
    $payment_type = $_GET['payment_type'];    

    $resmercado = array(
         'collection_id' => $collection_id,
         'collection_status' => $collection_status,
         'preference_id' => $preference_id,
         'payment_type' => $payment_type
    );
    
    uc_payment_enter($order_id, 'mercadopago', number_format($order->order_total, 2, '.', ''), $order->uid, json_encode($resmercado));
    uc_cart_complete_sale($order, variable_get('uc_new_customer_login', FALSE));

    return t('¡Gracias por tu compra!');
  }
}


function uc_mercadopago_uc_payment_gateway() {
  $gateways['uc_mercadopago'] = array(
      'title' => t('MercadoPago'),
      'description' => t('Procesar pagos através de MercadoPago'),
  );
  return $gateways;
}



function uc_mercadopago_uc_payment_method() {
  $methods[] = array(
      'id' => 'mercadopago_credit',
      'name' => t('MercadoPago'),
      'title' => t('Mercado Pago'),
      'desc' => t('Pagar através de MercadoPago'),
      'callback' => 'uc_mercadopago_method',
      'redirect' => 'uc_mercadopago_form',
      'weight' => 1,
      'checkout' => TRUE,
  );
  return $methods;
}


function uc_mercadopago_method($op, &$order) {
  switch ($op) {
    case 'settings':
      
      $form['client'] = array(
          '#type' => 'fieldset',
          '#title' => t('Credenciales MercadoPago'),
          '#description' => t('Los datos se solicitan en la administración de <a href="@url" target="new">herramientas de MercadoPago</a>',array('@url'=>'https://www.mercadopago.com/mlm/herramientas/aplicaciones')),
          '#weight' => 5,
          '#collapsible' => TRUE,
          '#collapsed' => FALSE,
      );
      
      $form['config'] = array(
          '#type' => 'fieldset',
          '#title' => t('Configuración de la experiencia de compra'),
          '#weight' => 5,
          '#collapsible' => TRUE,
          '#collapsed' => FALSE,
      );
      
      $form['client']['mercadopago_client_id'] = array(
          '#type' => 'textfield',
          '#title' => t('CLIENT_ID'),
          '#help' => t('Este dato se obtiene en '),
          '#description' => t('Tu CLIENT_ID de MercadoPago'),
          '#default_value' => variable_get('mercadopago_client_id'),
      );
      $form['client']['mercadopago_client_secret'] = array(
          '#type' => 'textfield',
          '#title' => t('CLIENT_SECRET'),
          '#description' => t('Tu CLIENT_SECRET de MercadoPago'),
          '#default_value' => variable_get('mercadopago_client_secret'),
      );
      $form['config']['mercadopago_checkout_label'] = array(
          '#type' => 'textfield',
          '#title' => t('Etiqueta del botón de compra'),
          '#description' => t('Etiqueta del botón de compra del checkout final cuando el comprador está apunto de pagar.'),
          '#default_value' => variable_get('mercadopago_checkout_label'),
      );

      $form['config']['mercadopago_message_order'] = array(
          '#type' => 'textfield',
          '#title' => t('Mensaje en total de orden'),
          '#description' => t('Mensaje que aparecerá en la ventana de mercadopago antes del monto total de la orden.'),
          '#default_value' => variable_get('mercadopago_message_order'),
      );
      
      $form['config']['mercadopago_button_class'] = array(
          '#type' => 'textfield',
          '#title' => t('Clase del botón de checkout'),
          '#description' => t('Es la clase del botón de mercado pago ver: <a href="@liga" target="new">Botones MercadoPago</a>',array("@liga"=>'http://developers.mercadopago.com/documentacion/recibir-pagos#resources-web-look')),
          '#default_value' => variable_get('mercadopago_button_class'),
      );
      
      $form['config']['mercadopago_open_mode'] = array(
          '#type' => 'select',
          '#title' => t('Modo de apertura'),
          '#options' => array(
              'modal' => t('Modal'),
              'blank' => t('Nueva ventana'),
              'redirect' => t('Misma ventana'),
          ),
          '#default_value' => variable_get('mercadopago_open_mode','modal'),
          '#description' => t('Modo de apertura de la pantalla de MercadoPago.'),
      );
      
      
/*      
      $form['mercadopago_backurl_success'] = array(
          '#type' => 'textfield',
          '#title' => t('Url de pantalla de éxito'),
          '#description' => t('Es el URL de la página a mostrar una vez que la venta ha sido exitosa.'),
          '#default_value' => variable_get('mercadopago_backurl_success'),
      );
      
      $form['mercadopago_backurl_error'] = array(
          '#type' => 'textfield',
          '#title' => t('Url de pantalla de error'),
          '#description' => t('Es el URL de la página a mostrar cuando se ha producido un error en la venta.'),
          '#default_value' => variable_get('mercadopago_backurl_error'),
      );
      
      $form['mercadopago_backurl_error'] = array(
          '#type' => 'textfield',
          '#title' => t('Url de pantalla de error'),
          '#description' => t('Es el URL de la página a mostrar cuando se ha producido un error en la venta.'),
          '#default_value' => variable_get('mercadopago_backurl_error'),
      );
*/      
      return $form;
  }
}

/**
 * Muestra la forma final de revisión y genera el documento para realizar el checkout con mercadopagl
 * @param $form
 * @param $form_state
 * @param $order
 * @return multitype:string
 */
function uc_mercadopago_form($form, &$form_state, $order) {

  //Instanciamos el API de mercadopago
  $mp = new MP(variable_get('mercadopago_client_id','none'), variable_get('mercadopago_client_secret', 'none'));
  
  $mp->sandbox_mode(TRUE);
  
  //Generamos el access token
  $accessToken = $mp->get_access_token();  
  
  // Info general de la orden
  $time = time();
  $order_id = $order->order_id;
  $order_total = number_format($order->order_total, 2, '.', '');
  $email_comprador = $order->primary_email;
  
  $divisa = $order->currency;
  
  //TODO: Eliminar divisa de prueba
  $divisa = 'ARS';
  
  //Comprador
  $nombre_comprador = $order->billing_first_name;
  $apellido_comprador = $order->billing_last_name;
  $cart_id = uc_cart_get_id();
  
  $data = array(
      'timestamp' => time(),
      'order_id' => $order->order_id,
      'order_total' => number_format($order->order_total, 2, '.', ''),
      'customer_email' => $order->primary_email,
      'cart_id' => uc_cart_get_id(),
  );

  //Mercado pago no acepta una lista de items, solo acepta el total de la orden y una descripción genérica
  $msgorden = variable_get('mercadopago_message_checkout','Total orden:');
  
  $items = array();
  //Para cada producto en el carro.
  settype($order_total, "float");
    
  $items[] = array (
    "id" => $order->order_id,
    "title" => $msgorden,
    "currency_id" => $divisa,
    "quantity" => 1,      
    "unit_price" => $order_total,
  );

  //back paths
  $urlsuccess =  url('uc_mercadopago/success',array('absolute' => true));
  $urlfailure =  url('uc_mercadopago/failure',array('absolute' => true));
  $urlpending =  url('uc_mercadopago/pending',array('absolute' => true));
  
  $backurls = array(
    "success" => $urlsuccess,
    "failure" => $urlfailure,
    "pending" => $urlpending
  );
  
  $preference = array (
      "payer" => array (
          "name" => $nombre_comprador,
          "surname" => $apellido_comprador,
          "email" => $email_comprador
      ),
      "items" => $items,
      "back_urls" => $backurls,
      "external_reference" => $order->order_id
  );

  $preferenceResult = $mp->create_preference($preference);

  //TODO: Eliminar el sandbox para producción
  $init_point = $preferenceResult['response']['sandbox_init_point']; 
  
  foreach ($data as $name => $value) {
    if (!empty($value)) {
      $form[$name] = array('#type' => 'hidden', '#value' => $value);
    }
  }

  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#markup' => "<a href=\"".$init_point."\" name=\"MP-Checkout\" class=\"".variable_get('mercadopago_button_class','lightblue')."\" mp-mode=\"".variable_get('mercadopago_open_mode','modal')."\" onreturn=\"resultado_checkout\">".variable_get('mercadopago_checkout_label','Checkout')."</a>" 
  );
  
  $form['actions']['script'] = array(

    '#markup' => "
  <script type=\"text/javascript\">
  (function(){
    function \$MPBR_load(){
      window.\$MPBR_loaded !== true && (function(){
        var s = document.createElement(\"script\");s.type = \"text/javascript\";s.async = true;
        s.src = (\"https:\"==document.location.protocol?\"https://www.mercadopago.com/org-img/jsapi/mptools/buttons/\":\"http://mp-tools.mlstatic.com/buttons/\")+\"render.js\";
        var x = document.getElementsByTagName('script')[0];x.parentNode.insertBefore(s, x);window.\$MPBR_loaded = true;
      })();
    }
    window.\$MPBR_loaded !== true ? (window.attachEvent ? window.attachEvent('onload', \$MPBR_load) : window.addEventListener('load', \$MPBR_load, false)) : null;
  })();
      
   function resultado_checkout(res) {
      console.log(res);
      if(res.collection_status!=null) {
        var urlsuccess = '?q=uc_mercadopago/success&collection_id='+res.collection_id+'&collection_status='+res.collection_status+'&preference_id='+res.preference_id+'&external_reference='+res.external_reference+'&payment_type='+res.payment_type;
        window.location = urlsuccess;
      }
   }
  </script>
  "      
      
  );
  return $form;
}

